{"version":3,"file":"cropper.min.js","sources":["../src/cropper.js"],"sourcesContent":["/*eslint-disable*/\n\n/*!\n * Cropper.js v1.5.6\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2019-10-04T04:33:48.372Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(source, true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(source).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || MIN_CONTAINER_WIDTH;\n      var minContainerHeight = Number(options.minContainerHeight) || MIN_CONTAINER_HEIGHT;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));"],"names":["global","factory","this","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","call","from","_iterableToArray","_nonIterableSpread","IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","slice","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","addClass","elem","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","PI","scale","drawImage","map","param","floor","fromCharCode","String","REGEXP_DATA_URL_HEAD","resetAndGetOrientation","arrayBuffer","orientation","dataView","DataView","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","abs","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","removeAttribute","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","pointers","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","ratios","pointer2","x1","y1","x2","y2","z1","sqrt","sort","a","b","getMaxZoomRatio","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","protoProps","staticProps","toDataURL","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","mimeType","chunks","subarray","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","exports","module","define","amd","self"],"mappings":"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"}